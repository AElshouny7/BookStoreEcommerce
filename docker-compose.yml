services:
  postgres:
    image: postgres:16-alpine
    container_name: bookstore_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: shouny
      POSTGRES_PASSWORD: ecommercepass
      POSTGRES_DB: bookstore
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bookstore_redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redisinsight:
    image: redis/redisinsight:latest
    container_name: bookstore_redisinsight
    restart: unless-stopped
    ports:
      - "5540:5540" # http://localhost:5540
    depends_on:
      - redis
    volumes:
      - redisinsight:/data
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5540/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # rabbitmq:
  #   image: rabbitmq:3.13-management-alpine
  #   container_name: bookstore_rabbitmq
  #   restart: unless-stopped
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672" # http://localhost:15672
  #   volumes:
  #     - rabbitmqdata:/var/lib/rabbitmq
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # bookstore_api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: bookstore_api
  #   restart: unless-stopped
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ConnectionStrings__StoreDbContext=Host=postgres;Database=bookstore;Username=shouny;Password=ecommercepass
  #     - Redis__Configuration=redis:6379
  #   ports:
  #     - "5000:80"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - rabbitmq

volumes:
  pgdata:
  redisdata:
  redisinsight:
  # rabbitmqdata:
